name: React Native CLI CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest

    steps:
      # Checkout the current repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js environment to install dependencies (updated to 20.x)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Install dependencies defined in package.json
      - name: Install dependencies
        run: yarn install

      # Set up JDK for Android (you may need Java 11 or 17)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      # Cache Gradle to speed up the build process
      - name: Cache Gradle files
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      # Build Android APK (the default task that builds the release APK)
      - name: Build Android
        run: |
          cd android
          ./gradlew assembleRelease

      # Upload the generated APK as an artifact (optional)
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: galleria-release.apk  # Updated the APK name to match your app name
          path: android/app/build/outputs/apk/release/app-release.apk

  build-ios:
    name: Build iOS
    runs-on: macos-latest

    steps:
      # Checkout the current repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js environment to install dependencies (updated to 20.x)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Install dependencies defined in package.json
      - name: Install dependencies
        run: yarn install

      # Install CocoaPods for iOS dependencies
      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      # Build iOS App (with updated scheme and workspace name to match your app name)
      - name: Build iOS
        run: |
          xcodebuild -workspace ios/galleria.xcworkspace \
          -scheme galleria \
          -sdk iphoneos \
          -configuration Release \
          -derivedDataPath ios/build

      # Upload the generated IPA as an artifact (optional)
      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: galleria-release.ipa  # Updated the IPA name to match your app name
          path: ios/build/Build/Products/Release-iphoneos/galleria.app

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      # Checkout the current repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js environment to install dependencies (updated to 20.x)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Install dependencies defined in package.json
      - name: Install dependencies
        run: yarn install

      # Run linting (checks code formatting based on ESLint)
      - name: Lint code
        run: yarn lint

      # Run Jest tests (runs the unit tests using Jest)
      - name: Run tests
        run: yarn test --ci
